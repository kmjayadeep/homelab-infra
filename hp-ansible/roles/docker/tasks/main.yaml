- name: ensure docker conf directory exists
  file:
    path: /etc/docker
    recurse: true
    state: directory

- name: Copy docker daemon config
  copy:
    dest: /etc/docker/daemon.json
    group: root
    mode: 0644
    owner: root
    src: files/daemon.json

- name: ensure docker service directory exists
  file:
    path: /etc/systemd/system/docker.service.d/
    recurse: true
    state: directory

- name: Copy docker service override
  copy:
    dest: /etc/systemd/system/docker.service.d/override.conf
    group: root
    mode: 0644
    owner: root
    src: files/service-override.conf

- name: Install required system packages
  apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
      - virtualenv
      - python3-setuptools
    state: present
    update_cache: true

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Update apt and install docker-ce
  apt:
    name: docker-ce
    state: present
    update_cache: true

- name: Create a volume
  community.docker.docker_volume:
    name: portainer_data


# Run portainer
# docker run -d -p 8000:8000 -p 9443:9443 --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce:latest
- name: Create a data container
  community.docker.docker_container:
    name: portainer
    image: portainer/portainer-ce:latest
    volumes:
    - portainer_data:/data
    - /var/run/docker.sock:/var/run/docker.sock
    exposed_ports:
    - 9443
    - 8000
    restart_policy: always
