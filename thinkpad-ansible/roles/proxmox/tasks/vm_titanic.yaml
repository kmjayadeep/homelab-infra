- name: Create Titanic VM
  community.general.proxmox_kvm:
    vmid: 110
    node: thinkpad
    api_user: root@pam
    api_password: "{{ proxmox_api_password }}"
    api_host: "{{ proxmox_api_host }}"
    cpulimit: 0
    name: titanic
    ciuser: titanic
    cipassword: "{{ titanic_password }}"
    cores: 2
    memory: 4500
    ide:
      ide2: local-lvm:cloudinit,media=cdrom
    sshkeys: "{{ ssh_public_key }}"
    nameservers:
      - '1.1.1.1'
    net:
      net0: 'virtio,bridge=vmbr0'
    ipconfig:
      ipconfig0: 'ip=192.168.0.30/24,gw=192.168.0.1'
    onboot: true
    agent: true
  register: titanic

- name: Waiting to start titanic virtual server machine completely
  wait_for:
    timeout: 20
  when: titanic.changed == true

- name: Check if Arch qcow file exists
  stat:
    path: /var/lib/vz/template/qcow/Arch-Linux-x86_64-cloudimg.qcow2
  register: arch_qcow

- name: "Mkdir qcow"
  shell: |
    mkdir -p /var/lib/vz/template/qcow
  when: not arch_qcow.stat.exists

- name: Download arch qcow
  shell: wget https://mirror.pkgbuild.com/images/latest/Arch-Linux-x86_64-cloudimg.qcow2 -O /var/lib/vz/template/qcow/Arch-Linux-x86_64-cloudimg.qcow2
  when: not arch_qcow.stat.exists

- name: Import arch qcow2 to titanic
  shell: qm importdisk 110 /var/lib/vz/template/qcow/Arch-Linux-x86_64-cloudimg.qcow2 local-lvm
  when: titanic.changed == true

- name: Attach newly created disk to titanic
  shell: qm set 110 --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-110-disk-0
  when: titanic.changed == true

- name: Resize titanic disk
  shell: qm disk resize 110 scsi0 50G
  when: titanic.changed == true

- name: Set boot order
  shell: qm set 110 --boot order=scsi0
  when: titanic.changed == true

- name: Start titanic VM
  community.general.proxmox_kvm:
    api_user: root@pam
    api_password: "{{ proxmox_api_password }}"
    api_host: "{{ proxmox_api_host }}"
    name: titanic
    node: thinkpad
    state: started
