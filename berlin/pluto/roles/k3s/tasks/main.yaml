---
- name: Copy kmsg script
  copy:
    dest: /usr/local/bin/conf-kmsg.sh
    group: root
    mode: 0744
    owner: root
    src: files/conf-kmsg.sh

- name: Copy kmsg service
  copy:
    dest: /etc/systemd/system/conf-kmsg.service
    group: root
    mode: 0644
    owner: root
    src: files/conf-kmsg.service

- name: Enable kmsg service
  ansible.builtin.systemd:
    state: started
    enabled: true
    daemon_reload: true
    name: conf-kmsg

- name: Check if k3s already installed
  stat:
    path: /etc/systemd/system/k3s.service
  register: k3s_service_file

- name: Download k3s binary x64
  get_url:
    url: https://get.k3s.io
    checksum: sha256:fbcfd9f516127878984a81f1f25b085f5913933171977bfdf5189e95df3f4fc1
    dest: /tmp/k3s_install.sh
    owner: root
    group: root
    mode: 0755
  when: not k3s_service_file.stat.exists

- name: Install k3s
  environment:
    INSTALL_K3S_VERSION: "{{ k3s_version }}"
    INSTALL_K3S_EXEC: 'server --disable traefik --disable servicelb --disable metrics-server --disable-cloud-controller
       --kube-controller-manager-arg=--node-cidr-mask-size-ipv6={{ node_cidr_mask_size_ipv6 }}
       --kube-proxy-arg proxy-mode=ipvs
       --cluster-cidr={{ cluster_cidr }} --service-cidr={{ service_cidr}} --snapshotter native
       --disable-network-policy --flannel-backend=none --node-ip={{ node_ip}} --disable local-storage'
  command: /tmp/k3s_install.sh
  when: not k3s_service_file.stat.exists

- name: Replace kubeconfig vars
  replace:
    path: /etc/rancher/k3s/k3s.yaml
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
  - regexp: 'https://127.0.0.1:6443'
    replace: 'https://{{ master_ip}}:6443'
  - regexp: "default"
    replace: "{{ cluster_name }}"

- name: Create storage directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /mnt/media/movies
    - /mnt/media/shows
    - /mnt/downloads/incomplete
    - /mnt/downloads/completed
